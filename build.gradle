buildscript {
    apply from: './gradle/config.gradle'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'io.fabric.tools:gradle:1.31.2'
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.2'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:1.0.2'
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.navigation}"
    }
}
apply plugin: 'com.vanniktech.android.junit.jacoco'
apply from: './gradle/config.gradle'

allprojects {
    repositories {
        google()
        jcenter()
    }

    afterEvaluate {
        extensions.findByName('kapt')?.arguments {
            // https://speakerdeck.com/jakewharton/helping-dagger-help-you-droidcon-uk-2018
            arg('dagger.formatGeneratedSource', 'disabled')
            arg('dagger.gradle.incremental', 'enabled')
        }
    }
}
def packageNameKey = "app_package_name"
def applicationNameKey = "application_name"

subprojects {
    afterEvaluate { project ->
        apply from: "${project.rootDir}/gradle/config.gradle"

        if (project.hasProperty("android")) {   //All the android projects

            //Apply all the configs for the android block here.
            android {
                compileSdkVersion sdk.compileSdk
                signingConfigs signingConfig

                if (project.pluginManager.hasPlugin("com.android.application")) {
                    //This is the app module
                    defaultConfig defaultAppConfig

                    buildTypes {
                        debug {
                            versionNameSuffix ".debug"

                            testCoverageEnabled true
                            debuggable true
                            zipAlignEnabled true
                            signingConfig signingConfigs.debug

                            // Fabric config
                            ext.enableCrashlytics = false
                            ext.alwaysUpdateBuildId = false
                        }
                        release {
                            minifyEnabled true
                            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), './proguard-rules.pro'

                            debuggable false
                            jniDebuggable false
                            shrinkResources true
                            renderscriptDebuggable false
                            zipAlignEnabled true

                            signingConfig signingConfigs.playStore
                        }
                    }
                } else if (project.pluginManager.hasPlugin("com.android.library")) {
                    //This is the library module
                    defaultConfig libDefaultConfig

                    buildTypes {
                        debug {
                            testCoverageEnabled true
                            debuggable true
                            signingConfig signingConfigs.debug
                            zipAlignEnabled true

                            buildConfigField "String", applicationNameKey.toUpperCase(), "\"${debugDetail.name}\""
                            buildConfigField "String", packageNameKey.toUpperCase(), "\"${debugDetail.packageName}\""
                        }
                        release {
                            minifyEnabled true
                            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), './proguard-rules.pro'

                            debuggable false
                            jniDebuggable false
                            renderscriptDebuggable false
                            zipAlignEnabled true
                            signingConfig signingConfigs.playStore

                            buildConfigField "String", applicationNameKey.toUpperCase(), "\"${releaseDetail.name}\""
                            buildConfigField "String", packageNameKey.toUpperCase(), "\"${releaseDetail.packageName}\""
                        }
                    }
                }

                //General options
                kotlinOptions kotlinOption
                compileOptions compileOption
                dexOptions dexOption
                packagingOptions packageExcludes
                lintOptions lintOption
                aaptOptions aaptOption
                testOptions testOption
                androidExtensions { experimental = true }
                buildFeatures { dataBinding = true }
                dexcount dexcountOptions
            }
        }

        dependencies {
            implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
            implementation('com.jakewharton.timber:timber:4.7.1', excludeGrp)
            implementation "io.reactivex.rxjava2:rxjava:2.2.19"

            //Hilt dependencies
            implementation "com.google.dagger:hilt-android:2.28-alpha"
            kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

            //Android libs
            if (project.hasProperty("android")) {
                implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

                // hilt view model
                implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
                kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'

                //Support libs
                implementation 'com.google.android.material:material:1.2.0-beta01'
                implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
                implementation "androidx.activity:activity-ktx:1.1.0"
                implementation "androidx.fragment:fragment-ktx:1.2.5"

                // ktx
                implementation 'androidx.core:core-ktx:1.1.0'

                //Arch
                implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
                implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
                kapt "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
